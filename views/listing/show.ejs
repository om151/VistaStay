<%- layout("/layouts/boilerplate")%>

<script>
  const mapToken = "<%= process.env.MAP_TOKEN %>";
  listing =  <%- JSON.stringify( listing )%>;
  
</script>
<body>
  <div class="row mt-3 show-container">
    <div class="col-6 offset-3">
      <h3><%= listing.title%></h3>
    </div>

    <div class="card col-6 offset-3 show-card listing-card">
      <img src="<%= listing.image.url%> " class="card-img-top show-img" />
      <div class="card-body">
        <p class="card-text"><b>Owned by : <%= listing.owner.username%></b> <br /></p>
        <p class="card-text"><%= listing.description%> <br /></p>
        <p class="card-text">
          &#8377; <%= listing.price.toLocaleString("en-IN") %> <br />
        </p>
        <p class="card-text"><%= listing.location%> <br /></p>
        <p class="card-text"><%= listing.country%> <br /></p>

        <% if(currUser){ %>
         

          <div>
            <label for="fromDate">From:</label>
          <input type="date" id="fromDate" name="fromDate" required />
      &nbsp;
          <label for="toDate">To:</label>
          <input type="date" id="toDate" name="toDate" required />
          </div>
 
      <button class="card-btn" id="payButton">Book now</button>
        
         
        <% }%>
<%= listing.owner._id%>

      </div>
    </div>



    <% if(currUser && (listing.owner._id.equals(currUser._id) || listing.admin._id.equals(currUser._id))) { %>

    <div class="btns mb-3">
      <a
        href="/listings/<%= listing._id%>/edit"
        class="edit-btn btn btn-dark col-1 offset-3"
        >Edit</a
      >

      <form method="POST" action="/listings/<%=listing._id%>?_method=DELETE">
        <button class="btn btn-dark offset-5">Delete</button>
      </form>
    </div>

    <% }%>
  




    <div class="col-6 offset-3">
      
      <% if(currUser){ %>
        <hr>
      <h4>Leave a Review</h4>
      <form
        action="/listings/<%=listing._id%>/review/"
        method="post"
        novalidate
        class="mb-3 needs-validation"
      >
    
         
    

        <div class="mb-3 mt-3c str-rat">
          <label for="rating" class="form-label">Rating</label>
<fieldset class="starability-slot">
  

  <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="1" checked aria-label="No rating." />
  <input type="radio" id="first-rate1" name="review[rating]" value="1" />
  <label for="first-rate1" title="Terrible">1 star</label>
  <input type="radio" id="first-rate2" name="review[rating]" value="2" />
  <label for="first-rate2" title="Not good">2 stars</label>
  <input type="radio" id="first-rate3" name="review[rating]" value="3" />
  <label for="first-rate3" title="Average">3 stars</label>
  <input type="radio" id="first-rate4" name="review[rating]" value="4" />
  <label for="first-rate4" title="Very good">4 stars</label>
  <input type="radio" id="first-rate5" name="review[rating]" value="5" />
  <label for="first-rate5" title="Amazing">5 stars</label>
</fieldset>
</div>


        <div class="mb-3 mt-3">
          <label for="comment" class="form-label">Comment</label>
          <textarea
            name="review[comment]"
            id="comment"
            cols="30"
            rows="5 "
            class="form-control"
            required
          ></textarea>
          <div class="invalid-feedback">
            Please submit some comment for review
          </div>
        </div>
        <button class="btn btn-outline-dark">Submit</button>
      </form>
      <% }%>
      <hr />
 
 <% if(listing.reviews.length > 0) {%>
      <div class="row">
        <p><b>All reviews</b></p>
        <% for(review of listing.reviews){ %>
        <div class="card col-5 ms-3 mb-3 all-rev">
          <div class="card-body">
            <h5 class="card-title">@<%= review.author.username %></h5>
            <p class="card-text"><%=review.comment%></p>
            <p class="starability-result card-text sh-str" data-rating=<%=review.rating%>>
              Rated: 3 stars
            </p>
          </div>
          <form
            class="mb-3"
            method="POST"
            action="/listings/<%=listing._id%>/review/<%=review._id%>?_method=DELETE"
          >

          <% if(currUser && (review.author.equals(currUser._id) || review.admin.equals(currUser._id)) ) { %>
            <button class="btn btn-sm btn-dark">Delete</button>
            <% } %>
          </form>
        </div>
        <% } %>
      </div>

      <% } %>
     
    </div>
    <div class="col-6 offset-3 mb-3">
      <h3>Where you'll be</h3>
      <div id="map"></div>
    </div>
  </div>
</body>
 



<script src="/js/map.js"></script>


<script>
  


  const fromDateInput = document.getElementById('fromDate');
          const toDateInput = document.getElementById('toDate');
  
          fromDateInput.addEventListener('change', () => {
              const fromDate = fromDateInput.value;
              toDateInput.setAttribute('min', fromDate); // Prevent selecting a date before "From Date"
          });
          let diffDays = 0;
  
  
  
            
          toDateInput.addEventListener('input', calculateDays);
          fromDateInput.addEventListener('input', calculateDays);
  
          function calculateDays() {
              const fromDate = fromDateInput.value;
              const toDate = toDateInput.value;
  
              const bookingDate = {
    fromDate: fromDate,
                toDate: toDate,
                totalDays: diffDays,
            };
  
  
              if (fromDate && toDate) {
                  const startDate = new Date(fromDate);
                  const endDate = new Date(toDate);
  
                  if (endDate >= startDate) {
                      const diffTime = endDate - startDate;
                       diffDays = diffTime / (1000 * 60 * 60 * 24); // Convert milliseconds to days
                       bookingDate = {
                  fromDate: fromDate,
                  toDate: toDate,
                  totalDays: diffDays,
              };
                      console.log(diffDays);
                     
                  } else {
                      alert('The "To" date must be after the "From" date.');
                     
                  }
              }
          }
  
  
  
          
  const payButton = document.getElementById('payButton');
  payButton.addEventListener('click', async () => {
  
  
  
  
      try {
        
  
        
        // console.log(currUser);
          const response = await fetch('/book-now', {
              method: 'POST',
              headers: {
                  'Content-Type': 'application/json',
              },
              body: JSON.stringify({ amount:  diffDays * listing.price }), // Amount in INR
          });
  
          if (!response.ok) throw new Error('Failed to create order');
  
          const order = await response.json();
          console.log('Order created:', order);
  
          
          // Initiate Razorpay payment
          const options = {
              key: 'rzp_test_wDrzOVw7ozuX6i', // Replace with your Razorpay Key ID
              amount: order.amount,
              currency: 'INR',
              name: 'My Website',
              description: 'Test transaction',
              order_id: order.id,
              handler: function (response) {
                  alert(`Payment successful: ${response.razorpay_payment_id}`);
              },
              prefill: {
                  name: " <%= currUser ? currUser.username : ' ' %>",
                  email: " <%= currUser ?  currUser.email : ' ' %>",
                  contact: '9999999999',
              },
              theme: {
                  color: '#3399cc',
              },
          };
  
          const rzp = new Razorpay(options);
          rzp.open();
      } catch (error) {
  
          console.error('Error:', error);
          alert('Something went wrong. Please try again.');
      }
  });
  
          
  
  </script>
